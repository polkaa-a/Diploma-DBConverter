package dto.postgresql;

import conversion.types.enums.PostgreSQLTypes;
import dto.base.FieldDTO;
import lombok.Getter;
import lombok.NonNull;
import lombok.Setter;

import java.util.ArrayList;
import java.util.List;

@Getter
public class PostgreSQLFieldDTO extends FieldDTO {
    protected final List<PostgreSQLForeignKeyDTO> foreignKeys;
    @NonNull
    protected final boolean isPK;
    @NonNull
    @Setter
    protected boolean isFK;
    @NonNull
    protected boolean isAutogenerated;

    public PostgreSQLFieldDTO(String name,
                              PostgreSQLTypes type,
                              boolean isPK,
                              boolean isFK,
                              PostgreSQLTableDTO tableDTO) {
        super(name, tableDTO, type);
        this.isPK = isPK;
        this.isFK = isFK;
        isAutogenerated = false;
        foreignKeys = new ArrayList<>();
        tableDTO.addField(this);
    }

    //if field is autogenerated (not from source database)
    public void setAutogeneratedFlag() {
        isAutogenerated = true;
    }

    //by name and type
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;

        PostgreSQLFieldDTO fieldDTO = (PostgreSQLFieldDTO) o;

        return type == fieldDTO.type;
    }

    @Override
    public int hashCode() {
        int result = super.hashCode();
        result = 31 * result + type.hashCode();
        return result;
    }
}

